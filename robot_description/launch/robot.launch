<?xml version="1.0"?>
<launch>
  <arg name="x" default="-5.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>
  
  <!-- Launch Gazebo with AWS RoboMaker Hospital World -->
  <include file="$(find aws_robomaker_hospital_world)/launch/view_hospital.launch" />

  <!-- Load the URDF/XACRO into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/robot.urdf.xacro" />
  <!--
  <node name="$(anon gazebo)" pkg="gazebo_ros" type="gazebo" output="screen">
        <param name="publish_tf" value="false"/>
  </node> -->
  
  <!-- Spawn the robot in Gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model my_robot -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" />

  <!-- Publish the robot's joint and TF states -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <!-- Launch RViz for visualization -->
  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/rviz/robot.rviz" output="screen" /> -->
  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/rviz/robot.rviz" output="screen" /> -->
</launch>


<!--
<?xml version="1.0"?>
<launch>
   Launch Gazebo with an empty world 
  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
  <include file="$(find aws_robomaker_hospital_world)/launch/view_hospital.launch" />

    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="headless" value="false" />
    <arg name="debug" value="false" />
  </include>
  

  Load the URDF into the ROS Parameter Server 
  <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/robot.urdf.xacro" />

  Spawn the robot in Gazebo 
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model my_robot -param robot_description -x 0 -y 0 -z 0.1" />

   Publish the robot's joint and TF states
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />


  Launch RViz for visualization
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/rviz/robot.rviz" />
</launch>

-->