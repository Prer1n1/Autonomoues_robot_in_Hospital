<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="my_robot">
  <!--

	<xacro:property name="wheel_ixx" value="0.034375" />
  	<xacro:property name="wheel_iyy" value="0.034375" />
  	<xacro:property name="wheel_izz" value="0.05625" />

	-->
  <material name="green">
    <color rgba="0.0 1.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 1.0 1.0"/>
  </material>
  <link name="robot_footprint"/>
  <joint name="robot_footprint_joint" type="fixed">
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>
  <!--
	<joint name="robot_footprint_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0" />
		<parent link="robot_footprint"/>
		<child link="chassis" />
	</joint> -->
  <!-- Make Chassis of Bot -->
  <link name="chassis">
    <!-- <pose>0 0 0.1 0 0 0</pose> -->
    <inertial>
      <mass value="487.79999999999995"/>
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <inertia ixx="18.292499999999993" ixy="0" ixz="0" iyy="44.308499999999995" iyz="0" izz="44.308499999999995"/>
    </inertial>
    <collision name="collision">
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.0 0.6 0.3"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <geometry>
        <box size="1.0 0.6 0.3"/>
      </geometry>
      <material name="blue"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
  </link>
  <!--
	<joint name="robot_footprint_joint" type="fixed">
		<origin xyz="0 0 ${robot_wheel_radius}" rpy="0 0 0" />
		<parent link="robot_footprint"/>
		<child link="chassis" />
	</joint> -->
  <!-- Right Wheel Back -->
  <link name="right_wheel_back">
    <!--
		<inertial>
			<mass value="${robot_wheel_mass}"/>
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
			<inertia
				ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
				iyy="${wheel_iyy}" iyz="0.0"
				izz="${wheel_izz}"
			/>
		</inertial> -->
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertia>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861183375002"/>
      <inertia ixx="0.12371493680929685" ixy="0.0" ixz="0.0" iyy="0.12371493680929685" iyz="0" izz="0.21550343831296875"/>
    </inertia>
  </link>
  <!-- Right Wheel Front-->
  <link name="right_wheel_front">
    <!--
		<inertial>
			<mass value="${robot_wheel_mass}"/>
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
			<inertia
				ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
				iyy="${wheel_iyy}" iyz="0.0"
				izz="${wheel_izz}"
			/>
		</inertial> -->
    <visual>
      <origin rpy="1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertia>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861183375002"/>
      <inertia ixx="0.12371493680929685" ixy="0.0" ixz="0.0" iyy="0.12371493680929685" iyz="0" izz="0.21550343831296875"/>
    </inertia>
  </link>
  <!-- Left wheel Back-->
  <link name="left_wheel_back">
    <!--
		<inertial>
			<mass value="${robot_wheel_mass}"/>
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
			<inertia
				ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
				iyy="${wheel_iyy}" iyz="0.0"
				izz="${wheel_izz}"
			/>
		</inertial> -->
    <visual>
      <origin rpy="1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertia>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861183375002"/>
      <inertia ixx="0.12371493680929685" ixy="0.0" ixz="0.0" iyy="0.12371493680929685" iyz="0" izz="0.21550343831296875"/>
    </inertia>
  </link>
  <!-- Left wheel Front-->
  <link name="left_wheel_front">
    <!--
		<inertial>
			<mass value="${robot_wheel_mass}"/>
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
			<inertia
				ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
				iyy="${wheel_iyy}" iyz="0.0"
				izz="${wheel_izz}"
			/>
		</inertial> -->
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertia>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861183375002"/>
      <inertia ixx="0.12371493680929685" ixy="0.0" ixz="0.0" iyy="0.12371493680929685" iyz="0" izz="0.21550343831296875"/>
    </inertia>
  </link>
  <!-- Camera -->
  <link name="camera">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- Hokuyo Lidar -->
  <link name="hokuyo">
    <inertial>
      <mass value="0.3"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <!--Joints -->
  <!-- Right Wheel Joint Back-->
  <joint name="right_wheel_hinge_back" type="continuous">
    <origin rpy="0 0 0" xyz="-0.32 -0.35 -0.1"/>
    <parent link="chassis"/>
    <child link="right_wheel_back"/>
    <axis xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <!-- Right Wheel Joint Front-->
  <joint name="right_wheel_hinge_front" type="continuous">
    <origin rpy="0 0 0" xyz="0.32 -0.35 -0.1"/>
    <parent link="chassis"/>
    <child link="right_wheel_front"/>
    <axis xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <!-- Left Wheel Joint Back-->
  <joint name="left_wheel_hinge_back" type="continuous">
    <origin rpy="0 0 0" xyz="-0.32 0.35 -0.1"/>
    <parent link="chassis"/>
    <child link="left_wheel_back"/>
    <axis xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <!-- Left Wheel Joint Front-->
  <joint name="left_wheel_hinge_front" type="continuous">
    <origin rpy="0 0 0" xyz="0.32 0.35 -0.1"/>
    <parent link="chassis"/>
    <child link="left_wheel_front"/>
    <axis xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <!-- Camera Joint -->
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.26 0 0.3"/>
    <parent link="chassis"/>
    <child link="camera"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Hokoyu Joint -->
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0.3"/>
    <parent link="chassis"/>
    <child link="hokuyo"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Color of bot -->
  <gazebo reference="left_wheel_front">
    <material>Gazebo/Green</material>
    <kp>1000000.0</kp>
    <!-- kp and kd for rubber -->
    <kd>100.0</kd>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <gazebo reference="left_wheel_back">
    <material>Gazebo/Green</material>
    <kp>1000000.0</kp>
    <!-- kp and kd for rubber -->
    <kd>100.0</kd>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <gazebo reference="right_wheel_front">
    <material>Gazebo/Green</material>
    <kp>1000000.0</kp>
    <!-- kp and kd for rubber -->
    <kd>100.0</kd>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <gazebo reference="right_wheel_back">
    <material>Gazebo/Green</material>
    <kp>1000000.0</kp>
    <!-- kp and kd for rubber -->
    <kd>100.0</kd>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <!--<gazebo reference="right_wheel">
		<material>Gazebo/Green</material>
	</gazebo>-->
  <gazebo reference="camera">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="chassis">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="right_wheel_back">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="left_wheel_back">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="right_wheel_front">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="left_wheel_front">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo>
    <!-- Controller - a virtual device that receives commands from keyboard and transform these commands into revolute motions -->
    <plugin filename="libgazebo_ros_skid_steer_drive.so" name="skid_steer_drive_controller">
      <updateRate>100.0</updateRate>
      <robotNamespace> </robotNamespace>
      <leftFrontJoint>left_wheel_hinge_front</leftFrontJoint>
      <rightFrontJoint>right_wheel_hinge_front</rightFrontJoint>
      <leftRearJoint>left_wheel_hinge_back</leftRearJoint>
      <rightRearJoint>right_wheel_hinge_back</rightRearJoint>
      <wheelSeparation>0.7</wheelSeparation>
      <wheelDiameter>0.3</wheelDiameter>
      <torque>1000</torque>
      <broadcastTF>true</broadcastTF>
      <!-- topic to receive geometry_msgs/Twist message commands -->
      <topicName>cmd_vel</topicName>
      <commandTopic>cmd_vel</commandTopic>
      <topic_name_twist>cmd_vel</topic_name_twist>
      <!-- topic to publish nav_msgs/Odometry messages -->
      <odometryTopic>odom</odometryTopic>
      <topic_name_odometry>odom</topic_name_odometry>
      <!-- Defining odometry frame -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot base frame to calculate the odometry -->
      <robotBaseFrame>robot_footprint</robotBaseFrame>
      <!-- set to true to publish transforms for wheel links defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- set to true to publish transforms for the odom defaults to false -->
      <publishOdom>true</publishOdom>
      <!-- Set to publish transforms for the odometry , defaults to true-->
      <publishWheelJointState>true</publishWheelJointState>
      <topic_name_joint>joint</topic_name_joint>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>/my_robot</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="lidar_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>lidar_link</frameName>
        <robotNamespace>/my_robot</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>
</robot>

